{
	"info": {
		"_postman_id": "a608063b-116e-4651-af9b-202d0c08ece8",
		"name": "gorest.co.in",
		"description": "Testing requests with GoREST API Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4c8d66f-be32-4cbf-b19d-83c1e7fe93f5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Returned users count is 20\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.meta.pagination.limit).to.eql(20);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "54d02114-2a51-4982-b0f5-c244fb1a3bb1",
						"exec": [
							"pm.test(\"Creation of user is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"userId\" , pm.response.json().data.id)\r",
							"\r",
							"pm.test(\"Returned id is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get(\"userId\"));\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"createdUser\" , pm.response.json().data)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n      \"name\": \"{{$randomFullName}}\",\r\n      \"email\": \"{{$randomEmail}}\",\r\n      \"gender\": \"Female\",\r\n      \"status\": \"Inactive\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				},
				"description": "Creating of new user"
			},
			"response": []
		},
		{
			"name": "Update user details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ff26d33-71b3-4492-9496-eb2d65e08b8e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returned id is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get(\"userId\"));\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"userName\" , pm.response.json().data.name)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"name\": \"Evstati Karageorgiev\",\r\n        \"email\": \"evstatii@yahoo.com\",\r\n        \"gender\": \"Male\",\r\n        \"status\": \"Active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "gorest.co.in/public-api/users/{{userId}}",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public-api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify updated name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9056ed71-af34-421c-a118-62c0bc19c88e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the updated user name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var name = pm.collectionVariables.get(\"userName\")\r",
							"    pm.expect(jsonData.data.name).to.eql(name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get post count",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7964a233-f01f-41d8-af23-6e9dbea52ab5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"postsCount\" , pm.response.json().meta.pagination.total)\r",
							"\r",
							"pm.test(\"Posts count is zero\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var postCount = pm.collectionVariables.get(\"postsCount\")\r",
							"    pm.expect(postCount).to.eql(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ac45bd8-f7c8-46e1-b7bd-a45c47ac5591",
						"exec": [
							"pm.test(\"Successful post is created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"postId\" , pm.response.json().data.id);\r",
							"\r",
							"pm.test(\"Returned id of post is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var idOfPost = pm.collectionVariables.get(\"postId\")\r",
							"    pm.expect(jsonData.data.id).to.eql(idOfPost);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"id\": {{userId}},\r\n      \"user_id\": {{userId}},\r\n      \"title\": \"Random Title\",\r\n      \"body\": \"{{$randomLoremText}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get post count after post creation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ca2eede-5e2c-4806-a7c7-e2a86a335ed5",
						"exec": [
							"pm.test(\"Status code is OK\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Verify post count\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var postCount = pm.collectionVariables.get(\"postsCount\")\r",
							"    pm.expect(postCount).to.gte(jsonData.meta.pagination.total - 1);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32e02a0f-3d06-4b2d-9de4-ecee7aaf33bc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check response status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"id\": {{userId}},\r\n      \"post_id\": {{postId}},\r\n      \"name\": \"{{$randomFileName}}\",\r\n      \"email\": \"{{$randomEmail}}\",\r\n      \"body\": \"{{$randomLoremParagraph}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{postId}}/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{postId}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add toDo's",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eedfb3c7-702a-4409-bd65-cb61cae1aecf",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.test(\"ToDo is created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.completed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"toDoId\" , pm.response.json().data.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\" : \"{{$randomJobTitle}}\",\r\n    \"completed\" : \"false\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mark toDo as completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c7958b6-9166-4ac2-9ebe-52cada7722e1",
						"exec": [
							"pm.test(\"Status code is OK\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"toDo is marked as completed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.completed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\" : {{toDoId}},\r\n    \"user_id\" : {{userId}},\r\n    \"completed\" : true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/todos/{{toDoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						"{{toDoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b77a52c9-394e-4d51-ad8e-910f7e1bc758",
						"exec": [
							"pm.test(\"Post is deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "feb93110-2d80-4284-ae7f-afd633005d81",
						"exec": [
							"pm.test(\"Post is deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "c30dc871ae6f15990f42f3bd14f960500c51dbcd0feaa45ed0b5e0fe4b60c870",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a2fef06c-6f24-4584-888e-cdc05c937a19",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c81cead5-9750-4d30-a37f-88f3911699d1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cc57eb67-92df-4f38-861f-80a09bb6f6b9",
			"key": "userId",
			"value": ""
		},
		{
			"id": "40318022-775f-492a-81c2-faae183caf2c",
			"key": "createdUser",
			"value": ""
		},
		{
			"id": "6efc9dc1-5c76-4055-908f-aac4297e298f",
			"key": "userName",
			"value": ""
		},
		{
			"id": "eb8c1540-68ef-4b2f-ae5a-3b03c2bbb3b4",
			"key": "postsCount",
			"value": ""
		},
		{
			"id": "2fccbee3-acc2-48fe-9970-e6dfaa5ca1fe",
			"key": "postId",
			"value": ""
		},
		{
			"id": "3aedfe0d-c992-40ed-b9f7-726896da1811",
			"key": "toDoId",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}